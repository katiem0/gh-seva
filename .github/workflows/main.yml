name: PR Checks

on: 
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -v .

      - name: Run linting
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest
          args: --timeout=5m
      - name: Run tests
        run: |
          set -o pipefail
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic 2>&1 | tee test_output.log

      - name: Calculate coverage percentage
        id: coverage
        run: |
          COVERAGE_PCT=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}')
          echo "Coverage percentage: $COVERAGE_PCT"
          echo "coverage_percentage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
          
          # Set pass/fail threshold
          THRESHOLD="70.0%"
          COVERAGE_NUM=$(echo $COVERAGE_PCT | sed 's/%//')
          THRESHOLD_NUM=$(echo $THRESHOLD | sed 's/%//')
          
          if awk "BEGIN {exit !($COVERAGE_NUM < $THRESHOLD_NUM)}"; then
            echo "::warning::Coverage $COVERAGE_PCT is below threshold $THRESHOLD"
          else
            echo "::notice::Coverage $COVERAGE_PCT meets threshold $THRESHOLD"
          fi
          
          # Generate HTML report
          go tool cover -html=coverage.txt -o coverage.html

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: coverage-report
          path: |
            coverage.txt
            coverage.html

  markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '22'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: |
          markdownlint '**/*.md' \
            --ignore node_modules \
            --ignore '**/output/**' \
            --config .markdownlint.yaml